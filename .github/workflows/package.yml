name: Build and update to GitHub Pages

on:
  #schedule:
  # - cron: "11 0,4,8,12,16,20 * * *"
  push:
    branches:
      - master

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
          # node-version: 14

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Install Poetry
        run: pip install poetry

      - name: Install Pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: poetry install

      - name: Download latest data
        run: poetry run download

      - uses: actions/cache@v2
        id: cache
        with:
          path: koroonakaart/src/data
          key: ${{ hashFiles('data/*.json', 'build/*.py', 'pyproject.toml', 'poetry.lock') }}

      - name: Commit latest data files if updated
        # If cache matched then the files have not changed
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git config --global user.name "GitHub"
          git config --global user.email "<noreply@github.com>"

          cp -a data /tmp

          for i in 1 2 3 4 5; do
            # Reset local to origin
            git fetch --all
            git reset --hard origin/master

            # Add downloaded files
            cp -f /tmp/data/* data/
            git add data
            pre-commit run || true

            if [[ $(git status --porcelain) ]]; then
              # Try to commit and push updates
              git commit -m "Automatic update of data files"
              git push -q "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" master
            else
              echo "No updates to data"
              exit 0
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate chart data
        # If cache matched then the previously generated chart data is still valid
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry run generate

      - name: Build frontend
        run: |
          cp -f data/*.json koroonakaart/src/data
          cd koroonakaart
          pnpm install --frozen-lockfile
          pnpm run build
          mkdir -p dist/data
          cp src/data/*.json dist/data

          # Too large for GitHub
          rm dist/data/test_results.json
          rm dist/data/test_locations.json

      - name: Generate indexes
        run: |
          cd koroonakaart/dist
          for locale in en et ru; do
            mkdir -p "${locale}/faq"
            mkdir -p "${locale}/chart"
            cp index.html "${locale}/"
            cp index.html "${locale}/faq/"
            cp index.html "${locale}/chart/"
          done

      - name: Deploy to GitHub Pages
        if: success()
        run: |
          git config --global user.name "GitHub"
          git config --global user.email "<noreply@github.com>"

          SRC="$(pwd)"
          mkdir /tmp/github-pages && cd /tmp/github-pages
          git init . && git checkout --orphan "${BRANCH}"
          cp -r "${SRC}/${DEPLOY_DIR}"/* .
          [[ ! -z "${FQDN}" ]] && echo "${FQDN}" > CNAME
          git add . && git status && git commit --message "${MESSAGE}"
          git push -f -q "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" "${BRANCH}"
        env:
          DEPLOY_DIR: koroonakaart/dist
          FQDN: koroonakaart.cocreators.ee
          MESSAGE: Deploy to GitHub Pages
          BRANCH: gh-pages
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
